1. url 교체로 네이버로그인이나 몇몇 보이는 에러 다시 지원할 수 있도록 변경 예정
2. accessToken,refreshToken은 이미 쿠키를 통해 암호화가 되어있으므로, 필요성이 낮다고 판단해 제거 예정
3. 댓글 대댓글 생략한 부분, 삭제나 수정같이 미완성인 부분 지원 예정
4. 실시간 웹 채팅
5. 스프링 배치 활용해서, 데이터 지우기 기능 추가
6. 이미 메모리 문제와 비용 문제로 서버를 분리해서 개발 중에 있긴하지만, 부트가 있는 서버는 도커로 배포 예정
7. 이전에 다른 곳에서 작업해본적 있던 그라파나, 프로메테우스, actuator 연결 지원 예정
8. 스프링부트 자체적으로도 타임리프를 이용해 접속이 가능하도록 지원
9. 로깅으로 데이터 남겨서 운영/관리가 가능하도록 지원 

개발적으로 힘든 부분
1. 스프링 시큐리티에서 현재 통신하고 있는 서버에서 로그인만 처리하려는 
API 서버 2중화로도 사용할 수 있도록 지원하려는 과정에서, 개발 난이도가 높아서 메모리를 잡아먹어도 지원해주는 방향으로 선택했는데 메모리도 아끼면서, 서버 비용도 줄이는 부분 생각해보야할듯 
(스프링 시큐리티와 db쪽 관련해서 건들여야 해서 복잡한 과정이다 보니 메모리 최적화가 덜 됨)


고민할 부분
1. swagger와 RestDocs API 중 어떤 부분을 짜야될지 고민 중에 대한 부분
2. mongodb를 댓글/대댓글에만 지원중에 있는데, 사실 RDB에 있는 구조들도 다 mongodb로도 변경이 가능한 사항이라 rdb를 교체할지에 대한 고민(쇼핑몰에 mongodb만을 사용해서 개발한다던가같은..)
3. 바닐라 js대신 jquery로 현실과 타협해서 개발속도를 좀 더 개선할지 (비슷하게 리액트에서도 jquery 문법이 사용이 가능해 고민중에 있음)
4. nodeJs나 mybatics같이 경험해본적 있는 기술로도 백엔드를 개발하면서 경험을 다양하게 쌓아야할지
5. js,리액트 -> ts 교체라던가 scss, SEO 최적화, 모든 로직은 스켈레톤 바로 교체 (+ 애니메이션 추가)한다던가 같은 부분에 대해서 경험을 늘려야할지에 대한 부분
6. 디자인이 촌스럽다는 지적을 받고 있는 환경인데, 좀 더 디자인에 시간을 신경써야할지에 대한 고민 
7. 국비학원에서 파이널 프로젝트로(+코테+국비학원에서 주변 분들에 디자인적으로 부족한부분) 시간적 여유가 없는데 해당 프로젝트를 발전 시키며 좀 더 한계를 보여야 할지, 다른 플젝도 해보면서 속도를 증진시켜야할지에 대한 부분
